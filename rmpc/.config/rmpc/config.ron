#![enable(implicit_some)]
#![enable(unwrap_newtypes)]
#![enable(unwrap_variant_newtypes)]
(
    address: "127.0.0.1:6600",
    password: None,
    theme: None,
    cache_dir: None,
    on_song_change: None,
    volume_step: 5,
    max_fps: 30,
    scrolloff: 0,
    wrap_navigation: false,
    enable_mouse: true,
    enable_config_hot_reload: true,
    status_update_interval_ms: 1000,
    rewind_to_start_sec: None,
    reflect_changes_to_playlist: false,
    select_current_song_on_change: false,
    browser_song_sort: [Disc, Track, Artist, Title],
    directories_sort: SortFormat(group_by_type: true, reverse: false),
    album_art: (
        method: Auto,
        max_size_px: (width: 1200, height: 1200),
        disabled_protocols: ["http://", "https://"],
        vertical_align: Center,
        horizontal_align: Center,
    ),
    cava: (
        framerate: 60, // default 60
        autosens: true, // default true
        sensitivity: 100, // default 100
        lower_cutoff_freq: 50, // not passed to cava if not provided
        higher_cutoff_freq: 10000, // not passed to cava if not provided
        input: (
            method: Fifo,
            source: "/tmp/mpd.fifo",
            sample_rate: 44100,
            channels: 2,
            sample_bits: 16,
        ),
        smoothing: (
            noise_reduction: 77, // default 77
            monstercat: false, // default false
            waves: false, // default false
        ),
        // this is a list of floating point numbers thats directly passed to cava
        // they are passed in order that they are defined
        eq: [],

        // symbols that will be used to draw the bar in the visualiser, in ascending order of
        // fill fraction
        bar_symbols: ['‚ñÅ', '‚ñÇ', '‚ñÉ', '‚ñÑ', '‚ñÖ', '‚ñÜ', '‚ñá', '‚ñà'],
        // similar to bar_symbols but these are used for the top-down rendering, meaning for orientation
        // "Horizontal" and "Top"
        inverted_bar_symbols: ['‚ñî', 'üÆÇ', 'üÆÉ', '‚ñÄ', 'üÆÑ', 'üÆÖ', 'üÆÜ', '‚ñà'],
        bg_color: "black", // background color, defaults to rmpc's bg color if not provided
        bar_width: 1, // width of a single bar in columns
        bar_spacing: 1, // free space between bars in columns
        // Possible values are "Top", "Bottom" and "Horizontal". Top makes the bars go from top to
        // bottom, "Bottom" is from bottom up, and "Horizontal" is split in the middle with bars going
        // both down and up from there.
        // Using non-default symbols with "Top" and "Horizontal" may produce undesired output.
        orientation: Bottom,
        // Colors can be configured in three different ways: a single color, different colors
        // per row and a gradient. You can use the same colors as everywhere else. Only specify
        // one of these:
        // Every bar symbol will be red
        bar_color: Single("red"),
        // The first two rows(two lowest amplitudes) will be red, after that two green rows
        // and the rest will be blue. You can have as many as you want here. The last value
        // will be used if the height exceeds the length of this array.
        bar_color: Rows([
            "red",
            "red",
            "green",
            "green",
            "blue",
        ]),
        // A simple color gradient. This is a map where keys are percent values of the height
        // where the color starts. After that it is linearly interpolated towards the next value.
        // In this example, the color will start at green for the lowest amplitudes, go towards
        // blue at half amplitudes and finishing as red for the highest values. Keys must be between
        // 0 and 100 and if the first or last key are not 0 and 100 respectively, the lowest and highest
        // value will be used as 0 and 100. Only hex and RGB colors are supported here and your terminal
        // must support them as well!
        bar_color: Gradient({
            0: "rgb(  0, 255,   0)",
            50: "rgb(  0,   0, 255)",
            100: "rgb(255,   0,   0)",
        }),
    ),
    keybinds: (
        global: {
            ":":       CommandMode,
            ",":       VolumeDown,
            "s":       Stop,
            ".":       VolumeUp,
            "<Tab>":   NextTab,
            "<S-Tab>": PreviousTab,
            "1":       SwitchToTab("Artists"),
            "2":       SwitchToTab("Albums"),
            "3":       SwitchToTab("Queue"),
            "4":       SwitchToTab("Directories"),
            "5":       SwitchToTab("Lyrics"),
            "6":       SwitchToTab("Playlists"),
            "7":       SwitchToTab("Search"),
            "8":       SwitchToTab("Cava"),
            "q":       Quit,
            ">":       NextTrack,
            "p":       TogglePause,
            "<":       PreviousTrack,
            "f":       SeekForward,
            "z":       ToggleRepeat,
            "x":       ToggleRandom,
            "c":       ToggleConsume,
            "v":       ToggleSingle,
            "b":       SeekBack,
            "~":       ShowHelp,
            "u":       Update,
            "U":       Rescan,
            "I":       ShowCurrentSongInfo,
            "O":       ShowOutputs,
            "P":       ShowDecoders,
            "R":       AddRandom,
        },
        navigation: {
            "k":         Up,
            "j":         Down,
            "h":         Left,
            "l":         Right,
            "<Up>":      Up,
            "<Down>":    Down,
            "<Left>":    Left,
            "<Right>":   Right,
            "<C-k>":     PaneUp,
            "<C-j>":     PaneDown,
            "<C-h>":     PaneLeft,
            "<C-l>":     PaneRight,
            "<C-u>":     UpHalf,
            "N":         PreviousResult,
            "a":         Add,
            "A":         AddAll,
            "r":         Rename,
            "n":         NextResult,
            "g":         Top,
            "<Space>":   Select,
            "<C-Space>": InvertSelection,
            "G":         Bottom,
            "<CR>":      Confirm,
            "i":         FocusInput,
            "J":         MoveDown,
            "<C-d>":     DownHalf,
            "/":         EnterSearch,
            "<C-c>":     Close,
            "<Esc>":     Close,
            "K":         MoveUp,
            "D":         Delete,
            "B":         ShowInfo,
        },
        queue: {
            "D":       DeleteAll,
            "<CR>":    Play,
            "<C-s>":   Save,
            "a":       AddToPlaylist,
            "d":       Delete,
            "C":       JumpToCurrent,
            "X":       Shuffle,
        },
    ),
    search: (
        case_sensitive: false,
        mode: Contains,
        tags: [
            (value: "any",         label: "Any Tag"),
            (value: "artist",      label: "Artist"),
            (value: "album",       label: "Album"),
            (value: "albumartist", label: "Album Artist"),
            (value: "title",       label: "Title"),
            (value: "filename",    label: "Filename"),
            (value: "genre",       label: "Genre"),
        ],
    ),
    artists: (
        album_display_mode: SplitByDate,
        album_sort_by: Date,
    ),
    tabs: [
        (
            name: "Artists",
            pane: Pane(Artists),
        ),
        //(
        //    name: "Album Artists",
        //    pane: Pane(AlbumArtists),
        //),
        (
            name: "Albums",
            pane: Pane(Albums),
        ),
        (
            name: "Queue",
            pane: Split(
                direction: Horizontal,
                panes: [
                    (
                        size: "40%",
                        pane: Pane(AlbumArt)
                    ),
                    (
                        size: "60%",
                        pane: Pane(Queue)
                    ),

                    //pane: Split(
                    //    direction: Horizontal,
                    //    panes: [
                    //        (
                    //            size: "100%",
                    //            pane: Pane(Cava)
                    //        ),
                    //    ],
                    //),

                ],
            ),
        ),
        (
            name: "Directories",
            pane: Pane(Directories),
        ),
        (
            name: "Lyrics",
            pane: Pane(Lyrics),      
        ),
        (
            name: "Playlists",
            pane: Pane(Playlists),
        ),
        (
            name: "Search",
            pane: Pane(Search),
        ),
        (
            name: "Cava",
            pane: Pane(Cava),
        ),
    ],
)

